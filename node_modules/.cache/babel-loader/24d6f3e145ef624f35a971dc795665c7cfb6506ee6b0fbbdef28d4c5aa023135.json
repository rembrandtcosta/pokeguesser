{"ast":null,"code":"var _jsxFileName = \"/home/rembr/pokeguesser/src/components/Game.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GameMap from \"./GameMap\";\nimport GameResult from \"./GameResult\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useSelectArea = () => {\n  _s();\n  const [selectedArea, setSelectedArea] = useState('Littleroot Town');\n  const changeSelectedArea = e => {\n    setSelectedArea(e);\n  };\n  return {\n    selectedArea,\n    changeSelectedArea\n  };\n};\n_s(useSelectArea, \"6EeynGB4EpoA+JphdUprpgPTg7E=\");\nexport default function Game() {\n  _s2();\n  const {\n    selectedArea,\n    changeSelectedArea\n  } = useSelectArea();\n  const [isActive, setIsActive] = useState(false);\n  const [image, setImage] = useState('Littleroot Town');\n  const [answer, setAnswer] = useState('');\n  function importAll(r) {\n    let images = {};\n    r.keys().forEach(item => {\n      images[item.replace('./', '')] = r(item);\n    });\n    return images;\n  }\n  const images = importAll(require.context(\"../../assets\", false, /\\.(png|jpe?g|svg)$/));\n  function setRandomImage() {\n    setIsActive(true);\n    setAnswer('');\n    setImage(getRandomImage(images));\n  }\n  function getRandomImage(set) {\n    set = new Map(Object.entries(set));\n    const items = Array.from(set.keys());\n    return items[Math.floor(Math.random() * items.length)];\n  }\n  function guess() {\n    const ans = image.slice(0, -4);\n    setAnswer(ans);\n    if (ans === selectedArea) {\n      console.log(\"Right!\");\n    } else {\n      console.log(\"Wrong!\");\n    }\n    setIsActive(false);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"position\": \"absolute\",\n        \"left\": \"60%\",\n        \"top\": \"50%\",\n        \"transform\": \"translate(-50%, -50%)\"\n      },\n      children: answer === '' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: images[image]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(GameResult, {\n        actual: selectedArea,\n        expected: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"position\": \"absolute\",\n        \"left\": \"40%\",\n        \"top\": \"51%\",\n        \"transform\": \"translate(-50%, -50%)\"\n      },\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(GameMap, {\n          changeSelectedArea: changeSelectedArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"position\": \"absolute\",\n        \"top\": \"70%\"\n      },\n      children: isActive ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: guess,\n        children: \" Guess! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: setRandomImage,\n        children: \" Start \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s2(Game, \"EnfZo/N2kMCEvWZnkHzFZ2MWikk=\", false, function () {\n  return [useSelectArea];\n});\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","GameMap","GameResult","Button","jsxDEV","_jsxDEV","useSelectArea","_s","selectedArea","setSelectedArea","changeSelectedArea","e","Game","_s2","isActive","setIsActive","image","setImage","answer","setAnswer","importAll","r","images","keys","forEach","item","replace","require","context","setRandomImage","getRandomImage","set","Map","Object","entries","items","Array","from","Math","floor","random","length","guess","ans","slice","console","log","Fragment","children","style","src","fileName","_jsxFileName","lineNumber","columnNumber","actual","expected","onClick","_c","$RefreshReg$"],"sources":["/home/rembr/pokeguesser/src/components/Game.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport GameMap from \"./GameMap\";\nimport GameResult from \"./GameResult\";\nimport { Button } from \"@mui/material\";\n\nconst useSelectArea = () => {\n  const [selectedArea, setSelectedArea] = useState('Littleroot Town');\n  \n  const changeSelectedArea = (e: string) => {\n    setSelectedArea(e)\n  }\n\n  return {\n    selectedArea ,\n    changeSelectedArea\n  }\n}\n\n\nexport default function Game() {\n    const { selectedArea, changeSelectedArea } = useSelectArea();\n    const [isActive, setIsActive] = useState(false);\n    const [image, setImage] = useState('Littleroot Town');\n    const [answer, setAnswer] = useState('');\n\n    function importAll(r: any) {\n      let images: any = {};\n      r.keys().forEach((item: any) => {\n        images[item.replace('./', '')] = r(item);\n      });\n     return images;\n    }\n\n    const images = importAll(require.context(\"../../assets\", false, /\\.(png|jpe?g|svg)$/));\n\n    function setRandomImage() {\n      setIsActive(true);\n      setAnswer('');\n      setImage(getRandomImage(images));\n    }\n\n    function getRandomImage(set: Map<string, any>): string {\n      set = new Map(Object.entries(set))\n      const items = Array.from(set.keys())\n      return items[Math.floor(Math.random() * items.length)];\n    }\n\n    function guess() {\n      const ans = image.slice(0, -4);\n      setAnswer(ans)\n      if (ans === selectedArea) {\n        console.log(\"Right!\");\n      } else {\n        console.log(\"Wrong!\");\n      }\n\n      setIsActive(false);\n    }\n\n    return (\n    <React.Fragment>\n      <div style={\n      {\"position\": \"absolute\",\n      \"left\": \"60%\",\n      \"top\": \"50%\",\n      \"transform\": \"translate(-50%, -50%)\",\n      }} > \n        \n        { answer === '' ?\n        <img src={images[image]} /> :\n        <GameResult actual={selectedArea} expected={answer} />\n        }\n\n      </div>\n\n      <div style={\n      {\"position\": \"absolute\",\n      \"left\": \"40%\",\n      \"top\": \"51%\",\n      \"transform\": \"translate(-50%, -50%)\",\n      }} > \n        {isActive ?\n        <div>\n        <GameMap changeSelectedArea={changeSelectedArea} />\n        <p>{selectedArea}</p>\n        </div> :\n        <div />\n        }\n      </div>\n      \n      <div style ={\n        {\"position\": \"absolute\",\n        \"top\" : \"70%\",\n        }}\n      >\n      {isActive ?\n      (<Button onClick={guess}  > Guess! </Button>) :\n      (<Button onClick={setRandomImage}> Start </Button>)\n      }\n      </div>\n    </React.Fragment>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}